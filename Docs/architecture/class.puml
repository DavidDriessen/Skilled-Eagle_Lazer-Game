@startuml

class LCD <<boundery>> {
+test()
+push(data)
}
class IrSensor <<boundery>> {
}
class IrLed <<boundery>> {
}
class Button <<boundery>> {
+get()
}
class Speaker <<boundery>> {
+play(sound, duration)
}

class PcProxy <<proxy>> {
}

class IrReceiver <<controller>> {
-dataToSend
+receive()
}
class IrSender <<controller>> {
-receivedData
+receive()
-decode()
}
class SoundController <<controller>> {
}
class DisplayController <<controller>> {
}
class ButtonController <<controller>> {
-getButton()
}
class GameController <<controller>> {
-score
-wapen
-gameMode
+addScore(score)
+setWapen(wapen)
+getWapen()
+setGameMode()
+getGameMode()
}
class GameTimeController <<controller>> {
+start()
+stop()
}
class InitController <<controller>> {
}
class RegisterController <<controller>> {
}

enum Wapens <<entity>>
enum GameModes <<entity>>

LCD <-- DisplayController
IrSensor <-- IrReceiver
IrLed <-- IrSender
Button <- ButtonController
Speaker <-- SoundController

IrReceiver --> GameController
IrReceiver --> InitController
IrReceiver --> RegisterController

InitController --> GameController
RegisterController --> GameController

GameController <-> GameTimeController
DisplayController <-- GameTimeController
DisplayController <-- GameController

ButtonController <- GameController
IrSender <-- ButtonController
SoundController <-- ButtonController

GameController -->  Wapens
GameController --> GameModes
GameController <-- PcProxy

@enduml